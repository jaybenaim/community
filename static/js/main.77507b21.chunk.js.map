{"version":3,"sources":["components/App/Navbar/LoginForm.js","components/App/Navbar/SignupForm.js","components/App/Navbar/NavbarLogin.js","components/App/Navbar/index.js","components/App/Home.js","apis/root.js","components/App/Map/index.js","components/App/MyProfile/ItemForm.js","components/App/MyProfile/CreateProfileForm.js","components/EditProfile/index.js","components/App/ChatWidget/time.js","components/App/ChatWidget/index.js","components/App/MyProfile/ItemGrid.js","components/App/MyProfile/index.js","components/App/MyCommunity/ProfileItem.js","components/App/MyCommunity/ProfilePage.js","components/App/MyCommunity/index.js","components/App/index.js","serviceWorker.js","index.js","components/App/Navbar/logo/logo.png"],"names":["LoginForm","state","username","password","handle_change","e","name","target","value","setState","prevstate","newState","onSubmit","props","handle_login","htmlFor","type","this","onChange","React","Component","SignupForm","handle_signup","NavbarNew","logged_out_nav","className","onClick","display_form","logged_in_nav","handle_logout","size","form","displayed_form","loggedIn","window","localStorage","toUpperCase","NavBar","navClass","userProfile","expand","Brand","href","src","logo","alt","Toggle","aria-controls","Collapse","id","Link","sm","md","lg","NavbarLogin","Home","axios","create","baseURL","MAP_API_KEY","SimpleMap","getProfileAddresses","Root","get","then","res","data","length","users","checkGeocodeLoading","index","allProfiles","console","log","loading","parseInt","initializeGeocode","setApiKey","Geocode","enableDebug","getGeocodeFromAddress","address","fromAddress","toString","results","geometry","location","lat","lng","geocodes","mapStyles","width","height","displayMarkers","map","geocode","key","position","center","zoom","handleNavClassChange","forEach","style","google","initialCenter","centerAroundCurrentLocation","GoogleApiWrapper","apiKey","Item","handleItem","toggleAddItemForm","useState","item","setItem","price","setPrice","itemRef","createRef","priceRef","Dialog","Header","Title","Body","Group","controlId","Label","Control","ref","placeholder","Footer","variant","event","preventDefault","itemVal","current","priceVal","setTimeout","post","profile_id","name_of_item","available","headers","Authorization","alert","catch","err","CreateProfileForm","nameRef","emailRef","addressRef","show","handleShow","handleProfileFormClick","profileName","email","user","Number","profile_name","statusText","EditProfile","submitEditForm","toggleEditForm","closeEditForm","closeButton","Time","time","sender","senderClass","getTime","splitTime","messageTime","split","pop","timeOfDay","formattedTime","join","componentDidMount","ChatWidget","messageId","messages","title","subtitle","handleNewUserMessage","newMessage","userWhoBorrowedId","currentUserProfile","text","sending_user","recieving_user","checkIfUserHasMessagesPending","userId","filter","message","messageProps","addResponseMessage","renderCustomComponent","addUserMessage","onHide","chatShow","handleChatToggle","ItemGrid","userWhoRequestedItem","resetItemAvailability","patch","user_who_borrowed","getUserWhoRequestedItemsProfile","userWhoBorrowed","profile","deleteItem","delete","colSpan","userWhoBorrowedName","MyProfile","items","urls","profileImage","itemGif","image","itemName","matchedChatProfile","showEditForm","showAddItemForm","getItemsFromUser","undefined","changeImage","url","prompt","createProfileForm","getProfileFromToken","chatWidget","itemElements","i","loadProfile","getProfile","xs","handleItemClose","onChangeItemPrice","onChangeItemName","handleFormSubmit","displayItemForm","GIPHY_API_KEY","ProfileItem","itemAvailable","isActive","buttonClass","buttonText","handleBorrowButton","userProfileId","setHeroImage","getGify","query","a","images","fixed_height","fixed_height_still","disabled","ProfilePage","SearchPage","profileSearched","searchItem","searchResults","redirect","loaded","showSearchedProfile","clickedProfile","searchRef","handleSearchQuery","toLowerCase","getSearchProfile","profileId","push","error","showProfilePageForSearchedUser","searchedProfileCards","Img","fluid","inline","App","showProfile","itemPrice","handleAddItemName","handleAddItemPrice","handleItemFormSubmit","handleAddItemToggle","prevState","handleProfileFormSubmit","values","handleShowProfile","handleClose","getAllProfiles","profiles","getProfileId","getAllItems","Axios","token","newItems","exact","path","component","getItems","getSearchQuery","render","Map","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.77507b21.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass LoginForm extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  handle_change = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={e => this.props.handle_login(e, this.state)}>\n        <h4>Log In</h4>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handle_change}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handle_change}\n        />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n  handle_login: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass SignupForm extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  handle_change = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={e => this.props.handle_signup(e, this.state)}>\n        <h4>Sign Up</h4>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handle_change}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handle_change}\n        />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default SignupForm;\n\nSignupForm.propTypes = {\n  handle_signup: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\nimport LoginForm from \"./LoginForm\";\nimport SignupForm from \"./SignupForm\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\n\nclass NavbarNew extends React.Component {\n  logged_out_nav = (\n    <div className=\"center\">\n      <ul>\n        <li\n          className=\"btn btn-primary login\"\n          onClick={() => this.props.display_form(\"login\")}\n        >\n          login\n        </li>\n\n        <li\n          className=\"btn btn-primary signup\"\n          onClick={() => this.props.display_form(\"signup\")}\n        >\n          signup\n        </li>\n      </ul>\n    </div>\n  );\n  logged_in_nav = (\n    <Button className=\"logout-btn\" onClick={this.props.handle_logout} size=\"sm\">\n      logout\n    </Button>\n  );\n  render() {\n    let form;\n    switch (this.props.displayed_form) {\n      case \"login\":\n        form = <LoginForm handle_login={this.props.handle_login} />;\n        break;\n      case \"signup\":\n        form = <SignupForm handle_signup={this.props.handle_signup} />;\n        break;\n      default:\n        form = null;\n    }\n    return (\n      <Container>\n        <Row>\n          {this.props.loggedIn ? this.logged_in_nav : this.logged_out_nav}\n          {form}\n          <h3>\n            {this.props.loggedIn\n              ? `Hello, ${window.localStorage[\"username\"] &&\n                  window.localStorage[\"username\"].toUpperCase()}`\n              : \"Please Log In\"}\n          </h3>\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default NavbarNew;\n\nNavbarNew.propTypes = {\n  loggedIn: PropTypes.bool.isRequired,\n  display_form: PropTypes.func.isRequired,\n  handle_logout: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport logo from \"./logo/logo.png\";\nimport \"./index.css\";\nimport NavbarLogin from \"./NavbarLogin\";\n\nclass NavBar extends React.Component {\n  render() {\n    const {\n      navClass,\n      loggedIn,\n      display_form,\n      handle_logout,\n      username,\n      displayed_form,\n      handle_login,\n      handle_signup,\n      userProfile\n    } = this.props;\n\n    return (\n      <Navbar className={navClass} expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img className=\"logo\" src={logo} alt=\"logo\" />\n          <span className=\"company-name\">&nbsp; COMMUNITY</span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"nav-toggle\" />\n\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/map\">Map</Nav.Link>\n            <Nav.Link href=\"/profiles/myprofile\">My Profile</Nav.Link>\n            <Nav.Link href=\"/profiles/search\">My Community</Nav.Link>\n            <Container>\n              <Row>\n                <Col sm={6} md={6} lg={6}>\n                  <div className=\"login-display\">\n                    <NavbarLogin\n                      loggedIn={loggedIn}\n                      display_form={display_form}\n                      handle_logout={handle_logout}\n                      username={username}\n                      displayed_form={displayed_form}\n                      handle_login={handle_login}\n                      handle_signup={handle_signup}\n                      userProfile={userProfile}\n                    />\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </Nav>\n          {/* make component or render the mycommpounity page here  */}\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./index.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"image-slider\">\n      <ul className=\"slideshow\">\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n      </ul>\n    </div>\n  );\n};\nexport default Home;\n","import axios from \"axios\";\n\n// axios.defaults.xsrfCookieName = \"csrftoken\";\n// axios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nexport default axios.create({\n  baseURL: \"https://friendly-community.herokuapp.com/\"\n});\n","import React, { Component } from \"react\";\nimport \"../index.css\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n// import { MAP_API_KEY } from \"../../../apis/keys\";\nimport Geocode from \"react-geocode\";\nimport Root from \"../../../apis/root\";\nconst MAP_API_KEY = \"test\";\n/**\n *@prop [allProfiles] array required\n */\n\nclass SimpleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      geocodes: [],\n      center: { lat: 43.671593898745726, lng: -79.37341993487492 },\n      zoom: 10,\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.initializeGeocode();\n    this.props.handleNavClassChange();\n    const { allProfiles } = this.props;\n    !this.state.loading &&\n      allProfiles.forEach(({ address }, index) => {\n        this.checkGeocodeLoading(index);\n        this.getGeocodeFromAddress(address);\n      });\n  }\n\n  getProfileAddresses = () => {\n    Root.get(\"profiles/\").then(res => {\n      if (res.data.length < res.data.length - 1)\n        this.setState({ users: res.data });\n    });\n  };\n\n  checkGeocodeLoading = index => {\n    const { allProfiles } = this.props;\n    console.log(index + allProfiles.length);\n    if (index === allProfiles.length - 1) {\n      this.setState({ loading: false });\n    } else if (\n      index === allProfiles.length - 1 &&\n      parseInt(index) !== 0 &&\n      index !== 1\n    ) {\n      this.setState({ loading: true });\n    }\n  };\n\n  initializeGeocode = () => {\n    const { setApiKey, enableDebug } = Geocode;\n    setApiKey(MAP_API_KEY);\n    enableDebug();\n  };\n\n  getGeocodeFromAddress = address => {\n    Geocode.fromAddress(address.toString()).then(res => {\n      const { lat, lng } = res.results[0].geometry.location;\n      const { geocodes } = this.state;\n      this.setState({ geocodes: [...geocodes, { lat, lng }] });\n    });\n  };\n  mapStyles = {\n    width: \"100%\",\n    height: \"100%\"\n  };\n\n  displayMarkers = () => {\n    return this.state.geocodes.map((geocode, index) => {\n      return (\n        <Marker\n          key={index}\n          id={index}\n          position={{ lat: geocode.lat, lng: geocode.lng }}\n        />\n      );\n    });\n  };\n\n  render() {\n    const { center, loading } = this.state;\n\n    if (!loading) {\n      return (\n        <section style={{ height: \"100vh\", width: \"100%\" }}>\n          <Map\n            google={this.props.google}\n            zoom={13}\n            style={this.mapStyles}\n            initialCenter={center}\n            centerAroundCurrentLocation\n          >\n            {this.displayMarkers()}\n          </Map>\n        </section>\n      );\n    }\n\n    return <div>Loading ... </div>;\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: MAP_API_KEY\n})(SimpleMap);\n","import React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Root from \"../../../apis/root\";\n\nconst Item = ({ handleItem, userProfile, toggleAddItemForm }) => {\n  // create hook state for holding item and price temp\n  const [item, setItem] = useState(null);\n  const [price, setPrice] = useState(null);\n\n  // create ref here for input values\n  const itemRef = React.createRef();\n  const priceRef = React.createRef();\n\n  const handleItemForm = e => {\n    e.preventDefault();\n    let itemVal = itemRef.current.value;\n    let priceVal = priceRef.current.value;\n\n    /// call the function to set state in app\n    setItem(itemVal);\n    setPrice(priceVal);\n\n    setTimeout(() => {\n      handleItem(itemVal, priceVal);\n    }, 1000);\n    Root.post(\n      \"items/\",\n      {\n        profile_id: userProfile[0].id,\n        name_of_item: itemVal,\n        price: priceVal,\n        available: true\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${window.localStorage[\"token\"]}`\n        }\n      }\n    )\n      .then(res => {\n        handleItem(item, price);\n        alert(\"Item Successfully Added! \");\n      })\n      .catch(err => {\n        alert(\"Something Went Wrong\");\n        console.log(err);\n      });\n  };\n\n  const handleClose = event => {\n    toggleAddItemForm(event);\n  };\n  return (\n    <>\n      <div>\n        <Modal.Dialog>\n          <Modal.Header>\n            <Modal.Title>Item Form</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Item</Form.Label>\n                <Form.Control\n                  name=\"item\"\n                  type=\"text\"\n                  ref={itemRef}\n                  placeholder=\"Enter An Item Name\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Price</Form.Label>\n                <Form.Control\n                  name=\"price\"\n                  type=\"text\"\n                  ref={priceRef}\n                  placeholder=\"Enter An Item Price\"\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleItemForm}>\n              Save changes\n            </Button>\n          </Modal.Footer>\n        </Modal.Dialog>\n      </div>\n    </>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Root from \"../../../apis/root\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./index.css\";\n\nclass CreateProfileForm extends React.Component {\n  nameRef = React.createRef();\n  emailRef = React.createRef();\n  addressRef = React.createRef();\n  state = {\n    show: false\n  };\n\n  handleShow = () => {\n    this.setState({ show: !this.state.show });\n  };\n\n  handleProfileFormClick = event => {\n    let profileName = this.nameRef.current.value;\n    let email = this.emailRef.current.value;\n    let address = this.addressRef.current.value;\n\n    console.log(window.localStorage[\"token\"]);\n    Root.post(\n      \"profiles/\",\n      {\n        user: Number(window.localStorage[\"id\"]),\n        username: window.localStorage[\"username\"],\n        profile_name: profileName,\n        email,\n        address, \n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${window.localStorage[\"token\"]}`\n        }\n      }\n    )\n      .then(res => {\n        this.handleShow();\n        console.log(\"POST Status: \" + res.statusText);\n      })\n      .catch(err => {\n        alert(\"Something went wrong, try signing up or loggin in first.\");\n        console.log(\"POST Status: \" + err);\n      });\n  };\n\n  render() {\n    return (\n      <Container className=\"grid-container\">\n        <Button className=\"butoon\" variant=\"primary\" onClick={this.handleShow}>\n          Create a Profile\n        </Button>\n        <Modal className=\"modal-form\" show={this.state.show}>\n          <Modal.Header>\n            <Modal.Title name=\"someValue\">Create a Profile </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Profile Name</Form.Label>\n                <Form.Control\n                  name=\"name\"\n                  ref={this.nameRef}\n                  type=\"name\"\n                  placeholder=\"Enter Profile Name\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  name=\"email\"\n                  ref={this.emailRef}\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicAddress\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  name=\"address\"\n                  ref={this.addressRef}\n                  type=\"text\"\n                  placeholder=\"Enter Address\"\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button onClick={this.handleShow} variant=\"secondary\">\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleProfileFormClick}>\n              Save changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nexport default CreateProfileForm;\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./index.css\";\n\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: props.username || \"\",\n      profile_name: props.profile_name || \"\",\n      email: props.email || \"\",\n      address: props.address || \"\"\n    };\n  }\n\n  submitEditForm = e => {\n    console.log(\"sumbit form clicked, not implemented\");\n    this.props.toggleEditForm(e);\n    // root\n    //   .patch(\"profiles/2/\", {\n    //     profile_name: \"JOHNNY\",\n    //     email: \"changed@change.com\",\n    //     address: \"1000 Yonge St\"\n    //   })\n    //   .then(res => {\n    //     console.log(res.data);\n    //   });\n  };\n\n  closeEditForm = e => {\n    console.log(\"close button clicked\");\n    this.props.toggleEditForm(e);\n  };\n\n  render() {\n    return (\n      <>\n        <div>\n          <Modal.Dialog>\n            <Modal.Header closeButton={true} onClick={this.closeEditForm}>\n              <Modal.Title>Edit your Profile</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n              <Form>\n                <Form.Group controlId=\"formBasicName\">\n                  <Form.Label>Profile Name (optional)</Form.Label>\n                  <Form.Control\n                    name=\"price\"\n                    type=\"text\"\n                    // onChange={event => onChangeItemPrice(event.target.value)}\n                    placeholder=\"Modify your Profile Name\"\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicName\">\n                  <Form.Label>E-mail (optional)</Form.Label>\n                  <Form.Control\n                    name=\"price\"\n                    type=\"text\"\n                    // onChange={event => onChangeItemPrice(event.target.value)}\n                    placeholder=\"Modify your E-mail\"\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicName\">\n                  <Form.Label>Address (optional)</Form.Label>\n                  <Form.Control\n                    name=\"price\"\n                    type=\"text\"\n                    // onChange={event => onChangeItemPrice(event.target.value)}\n                    placeholder=\"Modify your Address\"\n                  />\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.closeEditForm}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={this.submitEditForm}>\n                Save changes\n              </Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EditProfile;\n","import React from 'react';\n\nclass Time extends React.Component {\n  state = {\n    time: [],\n    sender: this.props.sender,\n    senderClass: this.props.sender === \"client\" ? \"rcw-client-time\" : \"rcw-response-time\" , \n  };\n  getTime = () => {\n    let splitTime = this.props.messageTime.split(\":\");\n    splitTime.pop() \n    let timeOfDay = \"\"; \n    let formattedTime = \"\";  \n    if (splitTime[0] < 12) {\n        timeOfDay = \"AM\";\n    } else if (splitTime[0] > 12) {\n        splitTime[0] = splitTime[0] - 12;\n        timeOfDay = \" PM\";\n        formattedTime = splitTime.join(\":\");\n        formattedTime = formattedTime + timeOfDay;\n    }\n\n\n    this.setState({ time: [...this.state.time, formattedTime] });\n  };\n  componentDidMount = () => {\n    this.getTime();\n  };\n  render() {\n    return (\n      <div className={this.state.senderClass}>\n        <div> {this.state.time[0]}</div>\n      </div>\n    );\n  }\n}\n \nexport default Time;","import React, { Component } from \"react\";\nimport {\n  Widget,\n  addResponseMessage,\n  addLinkSnippet,\n  addUserMessage, \n  renderCustomComponent\n} from \"react-chat-widget\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\n// import \"react-chat-widget/lib/styles.css\";\nimport \"./index.css\";\nimport Root from '../../../apis/root'; \nimport Time from \"./time\";\n\nclass ChatWidget extends Component {\n  state = {\n    messageId: null,\n    messages: [],\n    title: `Chatting with ${this.props.title}` || `Chatting with ${this.props.userWhoBorrowedName}`, \n    subtitle: \"Welcome\",\n  };\n\n  componentDidMount() {\n    // TODO:: get message from api\n    //  addResponseMessage();\n    this.checkIfUserHasMessagesPending();\n  }\n\n  handleNewUserMessage = newMessage => {\n    // TODO:: send message to api\n\n    const { userProfile, userWhoBorrowedId, currentUserProfile } = this.props;\n    const { id: userProfileId, user } = currentUserProfile[0];\n    Root.post(\n      \"messages/\",\n      {\n        text: newMessage,\n        sending_user: user,\n        recieving_user: userWhoBorrowedId\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${window.localStorage[\"token\"]}`\n        }\n      }\n    )\n      .then(res => {\n        console.log(\"message sent\");\n        this.setState({ messageId: res.data.id });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  checkIfUserHasMessagesPending = () => {\n    // if yes display bubble or change color of chat button\n    const { userProfile, userWhoBorrowedId, currentUserProfile } = this.props;\n    const {  user: userId } = currentUserProfile[0];\n\n    Root.get(\"messages/\").then(res => {\n\n      let messages = res.data;\n\n      messages.filter(message => {\n\n        if (\n          message.recieving_user === userId &&\n          message.sending_user === userWhoBorrowedId\n        ) {\n          const messageProps = { messageTime: message.time, sender: \"server\" };\n          addResponseMessage(message.text);\n          renderCustomComponent(Time, messageProps);\n        } else if (\n          message.recieving_user === userWhoBorrowedId &&\n          message.sending_user === userId\n        ) {\n          const messageProps = { messageTime: message.time, sender: \"client\" };\n          addUserMessage(message.text);\n          renderCustomComponent(Time, messageProps);\n        }\n      });\n\n      //  this.setState({ messages: [...this.state.messages, usersMessages  ]});\n    });\n  };\n\n  render() {\n    return (\n      <Modal\n        onHide={() => false}\n        className=\"modal-form\"\n        show={this.props.chatShow}\n      >\n        <Modal.Header>\n          <Modal.Title name=\"someValue\">\n          {this.state.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Widget\n            handleNewUserMessage={this.handleNewUserMessage}\n            title={this.state.title}\n            subtitle={this.state.subtitle}\n          />\n          <Button onClick={this.props.handleChatToggle}>Close</Button>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ChatWidget;\n","import React from \"react\";\nimport \"./index.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Root from \"../../../apis/root\";\nimport ChatWidget from \"../ChatWidget\";\n\nclass ItemGrid extends React.Component {\n  state = {\n    userWhoRequestedItem: [],\n    userWhoBorrowedId: null,\n    chatShow: false, \n\n  };\n  resetItemAvailability = e => {\n    const { id, userProfile } = this.props;\n\n    Root.patch(\n      `items/${id}/`,\n      {\n        profile_id: userProfile[0].id,\n        user_who_borrowed: null,\n        available: true\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${window.localStorage[\"token\"]}`\n        }\n      }\n    ).catch(err => {\n      alert(\"Error\");\n    });\n  };\n\n  getUserWhoRequestedItemsProfile = () => {\n    const { userWhoBorrowed: id, name } = this.props;\n    id &&\n      Root.get(`profiles/${id}/`).then(res => {\n        let profile = res.data\n        this.setState({\n          userWhoRequestedItem: { [name]: profile.profile_name }, \n          userWhoBorrowedId: profile.user\n        });\n      });\n  };\n\n  deleteItem = () => {\n    const { id } = this.props;\n    Root.delete(`items/${id}/`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${window.localStorage[\"token\"]}`\n      }\n    })\n      .then(res => {\n        alert(\"Item Succesfully Deleted\");\n      })\n      .catch(err => {\n        alert(\"Something went wrong\");\n      });\n  };\n  componentDidMount = () => {\n    this.getUserWhoRequestedItemsProfile();\n  };\n\n  render() {\n    const {\n      name,\n      price,\n      userWhoBorrowed,\n      handleChatToggle,\n      userProfile,\n      chatShow\n    } = this.props;\n\n    return (\n      <tr>\n        <td colSpan=\"4\"></td>\n\n        {this.state.userWhoRequestedItem[name] ? (\n          <td colSpan=\"4\">\n            <Button variant=\"outline-info\" onClick={handleChatToggle}>\n              Chat\n            </Button>\n            <ChatWidget\n              currentUserProfile={userProfile}\n              userWhoBorrowedName={this.state.userWhoRequestedItem[name]}\n              userWhoBorrowedId={this.state.userWhoBorrowedId}\n              chatShow={chatShow}\n              handleChatToggle={handleChatToggle}\n              title={this.state.userWhoRequestedItem[name]}\n            />\n          </td>\n        ) : (\n          <td colSpan=\"4\"></td>\n        )}\n        <td>{name.toUpperCase()}</td>\n        <td>\n          &nbsp;&nbsp;\n          {price.toUpperCase()}\n          &nbsp;&nbsp;\n        </td>\n        {userWhoBorrowed ? (\n          <td>\n            {this.state.userWhoRequestedItem[name]} Requested to borrow this\n            item\n          </td>\n        ) : (\n          <td>This item is available for borrow</td>\n        )}\n        {userWhoBorrowed ? (\n          <td>\n            <Button\n              className=\"btn reset-item-availablity\"\n              variant=\"outline-primary\"\n              onClick={this.resetItemAvailability}\n            >\n              Reset Item Availablity\n            </Button>\n          </td>\n        ) : (\n          <td>\n            <Button\n              className=\"item-delete-btn\"\n              variant=\"outline-danger\"\n              onClick={this.deleteItem}\n            >\n              Delete Item\n            </Button>\n          </td>\n        )}\n        <td colSpan=\"4\"></td>\n      </tr>\n    );\n  }\n}\n\nexport default ItemGrid;\n","import React from \"react\";\nimport \"./index.css\";\nimport Root from \"../../../apis/root\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Item from \"./ItemForm\";\nimport CreateProfileForm from \"./CreateProfileForm\";\nimport EditProfile from \"../../EditProfile\";\nimport ItemGrid from \"./ItemGrid\";\n\n\nclass MyProfile extends React.Component {\n  state = {\n    user: [],\n    items: [],\n    urls: [],\n    profileImage:\n      \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n    itemGif: \"\",\n    image:\n      \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n    itemName: \"\",\n    matchedChatProfile: [], \n    showEditForm: false,\n    showAddItemForm: false,\n    loading: true\n  };\n\n  // Fetches all the items that users have created\n  getItemsFromUser = () => {\n    const { userProfile } = this.props;\n\n    console.log(userProfile);\n    Root.get(\"items/\").then(res => {\n      const items = res.data;\n      if (userProfile[0] !== undefined) {\n        this.setState({\n          items: items.filter(item => {\n            if (item.profile_id === userProfile[0].id) {\n              return item;\n            }\n          })\n        });\n      }\n    });\n  };\n\n  changeImage = () => {\n    let url = prompt(\"Enter a url\");\n    this.setState({ profileImage: url });\n  };\n\n  toggleEditForm = e => {\n    e.preventDefault();\n    console.log(\"clicked\");\n    if (this.state.showEditForm === false) {\n      return this.setState({ showEditForm: true });\n    }\n    return this.setState({ showEditForm: false });\n  };\n\n  toggleAddItemForm = event => {\n    event.preventDefault();\n    console.log(\"Add Item Form Clicked!\");\n    if (this.state.showEditForm === false) {\n      return this.setState({ showAddItemForm: !this.state.showAddItemForm });\n    }\n    return this.setState({ showAddItemForm: !this.state.showAddItemForm });\n  };\n\n \n  componentDidMount = () => {\n    this.props.handleNavClassChange();\n    setTimeout(() => {\n      this.getItemsFromUser();\n    }, 1000);\n  };\n  render() {\n    const { items } = this.state;\n    const {\n      chatShow,\n      handleChatToggle,\n      getProfileFromToken,\n      userProfile,\n      chatWidget\n    } = this.props;\n   \n\n    let itemElements = items.map((item, i) => {\n      const {\n        id,\n        name_of_item: name,\n        price,\n        available,\n        user_who_borrowed: userWhoBorrowed\n      } = item;\n\n      return (\n        <ItemGrid\n          key={i}\n          id={id}\n          name={name}\n          price={price}\n          available={available}\n          userProfile={userProfile}\n          userWhoBorrowed={userWhoBorrowed}\n          chatWidget={chatWidget}\n          handleChatToggle={handleChatToggle}\n          chatShow={chatShow}\n        />\n      );\n    });\n\n    let createProfileForm;\n    let profile;\n  \n    {\n      this.props.userProfile[0] === undefined\n        ? (createProfileForm = (\n            <CreateProfileForm\n              loadProfile={getProfileFromToken}\n              userProfile={userProfile}\n              getProfile={this.getProfile}\n            />\n          ))\n        : (profile = (\n            <Container className=\"cont\">\n              <Row>\n                <Col xs={12} md={12} lg={4} className=\"con\">\n                  <section>\n                    <img\n                      className=\"profile-image\"\n                      src={this.state.profileImage}\n                      alt=\"profile\"\n                      onClick={this.changeImage}\n                    />\n                    <div className=\"profile-details\">\n                      <Row>\n                        <p className=\"profile-name\">\n                          {userProfile[0].profile_name || null}\n                        </p>\n                      </Row>\n                      <br />\n                      <Row>\n                        <p className=\"profile-email\">\n                          <span className=\"bold\"> Email:</span>{\" \"}\n                          {userProfile[0].email}\n                        </p>\n                        <br />\n                      </Row>\n                      <Row>\n                        <p className=\"profile-address\">\n                          <br />\n                          <span className=\"bold\"> Address: </span>\n                          <a href=\"/map\"> {userProfile[0].address}</a>\n                        </p>\n                      </Row>\n\n                      <Button\n                        className=\"add-item-button\"\n                        variant=\"primary\"\n                        onClick={this.toggleAddItemForm}\n                      >\n                        Add Item\n                      </Button>\n                    </div>\n                    {this.state.showAddItemForm && (\n                      <Item\n                        toggleAddItemForm={this.toggleAddItemForm}\n                        itemName={this.state.itemName}\n                        handleItemClose={this.handleItemClose}\n                        onChangeItemPrice={this.onChangeItemPrice}\n                        onChangeItemName={this.onChangeItemName}\n                        handleFormSubmit={this.handleFormSubmit}\n                        displayItemForm={this.displayItemForm}\n                        handleItem={this.props.handleItem}\n                        userProfile={this.props.userProfile}\n                      />\n                    )}\n                  </section>\n                </Col>\n                <Col xs={12} md={12} lg={6} className=\"profile-items\">\n                  <strong>Your Items</strong>\n                  <table className=\"item-owner-container\">\n                    <tbody className=\"item-owner-items\">{itemElements}</tbody>\n                  </table>\n                </Col>\n              </Row>\n              <Button\n                className=\"edit-profile-button\"\n                variant=\"primary\"\n                onClick={this.toggleEditForm}\n              >\n                          Edit Profile         \n              </Button>\n              {this.state.showEditForm && (\n                <EditProfile toggleEditForm={this.toggleEditForm} />\n              )}\n            </Container>\n          ));\n    }\n\n    return (\n      <>\n        <div>\n          {createProfileForm}\n\n          {profile}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default MyProfile;\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport Root from \"../../../apis/root\";\nimport \"./index.css\";\n\n// import { GIPHY_API_KEY } from \"../../../apis/keys\";\nimport axios from \"axios\";\nconst GIPHY_API_KEY = \"test\";\n\nclass ProfileItem extends React.Component {\n  state = {\n    itemAvailable: this.props.available,\n    isActive: this.props.available ? false : true,\n    buttonClass: this.props.available ? \"success\" : \"danger\",\n    buttonText: this.props.available ? \"Item Available\" : \"Item Unavailable\",\n    image: null,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.setHeroImage();\n    console.log(localStorage[\"token\"]);\n  }\n\n  handleBorrowButton = () => {\n    const { id, userProfileId, userProfile, currentUserProfile } = this.props;\n    Root.patch(\n      `items/${id}/`,\n      {\n        profile_id: userProfileId,\n        user_who_borrowed: currentUserProfile[0].id,\n        available: false\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${window.localStorage[\"token\"]}`\n        }\n      }\n    ).catch(err => {\n      alert(\"Item Not Available\");\n    });\n  };\n\n  // Get a list of names in an array to pass each name as the query string\n  // in the gify api\n  setHeroImage = () => {\n    const { name } = this.props;\n    this.getGify(name);\n  };\n\n  // GIPHY API CALL\n  getGify = async query => {\n    await axios\n      .get(\n        `https://api.giphy.com/v1/gifs/search?api_key=${GIPHY_API_KEY}&q=${query}&limit=1&offset=0&rating=G&lang=en`\n      )\n      .then(res => {\n        const image = res.data.data[0].images.fixed_height.url;\n        const { url } = res.data.data[0].images.fixed_height_still;\n\n        this.setState({ image: image || url, loading: false });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    // Show loading text when no image is ready\n    if (this.state.loading) {\n      return <Row>Loading ...</Row>;\n    }\n\n    return (\n      // Image is ready\n      <Row className=\"item-card\">\n        <div className=\"item-container\">\n          <Row className=\"item-square\">\n            <Col className=\"gif-container\">\n              <img className=\"item-image\" src={this.state.image} alt=\"item\" />\n            </Col>\n\n            <Col className=\"item-content item-name\">\n              <label htmlFor=\"item name\">Item Name</label>\n              <div> {this.props.name} </div>\n            </Col>\n            <Col className=\"item-content item-price\">\n              <label htmlFor=\"item price\">Item Price</label>\n              <div> {this.props.price}</div>\n            </Col>\n\n            <Button\n              className=\"item-content borrow-button\"\n              variant={this.state.buttonClass}\n              onClick={this.handleBorrowButton}\n              disabled={this.state.isActive}\n            >\n              {this.state.buttonText}\n            </Button>\n          </Row>\n        </div>\n      </Row>\n    );\n  }\n}\n\nexport default ProfileItem;\n","import React from \"react\";\nimport \"./index.css\";\nimport Root from \"../../../apis/root\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ProfileItem from \"./ProfileItem\";\nimport ChatWidget from \"../ChatWidget\";\nimport Button from \"react-bootstrap/Button\";\n\nclass ProfilePage extends React.Component {\n  state = {\n    user: [],\n    items: [],\n    urls: [],\n    profileImage:\n      \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n    itemGif: \"\",\n    image:\n      \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n    itemName: \"\",\n\n    showEditForm: false,\n    showAddItemForm: false,\n    loading: true\n  };\n\n  // Fetches all the items that users have created\n  getItemsFromUser = () => {\n    const { userProfile } = this.props;\n\n    Root.get(\"items/\").then(res => {\n      const items = res.data;\n      if (userProfile !== undefined) {\n        this.setState({\n          items: items.filter(item => {\n            if (item.profile_id === userProfile.id) {\n              return item;\n            }\n          })\n        });\n      }\n    });\n  };\n\n  changeImage = () => {\n    let url = prompt(\"Enter a url\");\n    this.setState({ profileImage: url });\n  };\n\n  toggleEditForm = e => {\n    e.preventDefault();\n    console.log(\"clicked\");\n    if (this.state.showEditForm === false) {\n      return this.setState({ showEditForm: true });\n    }\n    return this.setState({ showEditForm: false });\n  };\n\n  toggleAddItemForm = event => {\n    event.preventDefault();\n    console.log(\"Add Item Form Clicked!\");\n    if (this.state.showEditForm === false) {\n      return this.setState({ showAddItemForm: !this.state.showAddItemForm });\n    }\n    return this.setState({ showAddItemForm: !this.state.showAddItemForm });\n  };\n\n  handleNewUserMessage = newMessage => {\n    // TODO:: send message to api\n\n    const { userProfile, userWhoBorrowedId } = this.props;\n    const { id: userProfileId, user } = userProfile;\n    Root.post(\n      \"messages/\",\n      {\n        text: newMessage,\n        sending_user: user,\n        recieving_user: userWhoBorrowedId\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${window.localStorage[\"token\"]}`\n        }\n      }\n    )\n      .then(res => {\n        console.log(\"message sent\");\n        this.setState({ messageId: res.data.id, user: userProfile });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount = () => {\n    this.props.handleNavClassChange();\n\n    this.getItemsFromUser();\n  };\n\n  render() {\n    const { items, itemGif, image } = this.state;\n\n    const { userProfile, currentUserProfile } = this.props;\n    \n\n    let itemElements = items.map((item, i) => {\n      const { id, name_of_item, price, available, profile_id } = item;\n\n      return (\n        <ProfileItem\n          key={i}\n          id={id}\n          image={itemGif || image}\n          name={name_of_item}\n          price={price}\n          available={available}\n          userProfileId={profile_id}\n          userProfile={userProfile[0]}\n          currentUserProfile={currentUserProfile}\n        />\n      );\n    });\n\n    return (\n      <Container className=\"cont\">\n               \n        <Row>\n          <Col xs={12} md={12} lg={4} className=\"con\">\n            <section>\n              <img\n                className=\"profile-image\"\n                src={this.state.profileImage}\n                alt=\"profile\"\n                onClick={this.changeImage}\n              />\n              <div className=\"profile-details\">\n                <Row>\n                  <p className=\"profile-name\">\n                    {userProfile.profile_name || null}\n                  </p>\n                </Row>\n                <br />\n                <Row>\n                  <p className=\"profile-email\">\n                    <span className=\"bold\"> Email:</span> {userProfile.email}\n                  </p>\n                  <br />\n                </Row>\n                <Row>\n                  <p className=\"profile-address\">\n                    <br />\n                    <span className=\"bold\"> Address: </span>\n                    <a href=\"/map\"> {userProfile.address}</a>\n                  </p>\n                </Row>\n              </div>\n            </section>\n          </Col>\n          <Col xs={12} md={12} lg={6} className=\"profile-items\">\n            {itemElements}\n            <Button\n              variant=\"outline-info\"\n              onClick={this.props.handleChatToggle}\n            >\n              Chat\n            </Button>\n\n            <ChatWidget\n              currentUserProfile={this.props.currentUserProfile}\n              userProfile={this.props.userProfile}\n              chatShow={this.props.chatShow}\n              handleChatToggle={this.props.handleChatToggle}\n              userWhoBorrowedId={userProfile.user}\n              title={userProfile.profile_name}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Root from \"../../../apis/root\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./index.css\";\nimport Card from \"react-bootstrap/Card\";\nimport ProfilePage from \"./ProfilePage\";\n\nclass SearchPage extends Component {\n  state = {\n    // profileSearched: {\n    //   id: null,\n    //   idUrl: \"\",\n    //   profileName: \"User\",\n    //   email: \"Email\",\n    //   address: \"Address\"\n    // },\n    profileSearched: [], \n    searchItem: null,\n    searchResults: [],\n    loading: false,\n    redirect: false,\n    loaded: false,\n    showSearchedProfile: false, \n    clickedProfile: [], \n  };\n  searchRef = React.createRef();\n\n  handleSearchQuery = () => {\n    let query = this.searchRef.current.value;\n\n    Root.get(\"items/\")\n      .then(res => {\n        let items = res.data || [];\n\n        this.setState({\n          searchResults: items.filter((item, i) => {\n            if (item.name_of_item.toLowerCase() === query.toLowerCase()) {\n              this.getSearchProfile(item.profile_id);\n              return this.state.profileSearched\n            } \n          })\n        });\n      })\n      .catch(err => {\n        alert(\"No Item Found\")\n      });\n  };\n\n  getSearchProfile = (profileId) => {\n    try {\n      // const profileId = this.state.searchResults[0].profile_id;\n      const userProfile = [];\n      Root.get(`profiles/${profileId}/`).then(res => {\n        userProfile.push(res.data);\n        this.setState({\n          profileSearched: [...this.state.profileSearched, res.data]\n        });\n      });\n    } catch (error) {\n      alert(\"No Item Found\");\n    }\n  };\n  showProfilePageForSearchedUser = (profile) => {\n   \n    this.setState({ showSearchedProfile: true, clickedProfile: profile, loaded: true });\n  };\n  componentDidMount = () => {\n    this.props.handleNavClassChange();\n  };\n  \n  render() {\n    console.log(localStorage['token'])\n    const { showSearchedProfile, profileSearched, searchResults } = this.state; \n\n    let searchedProfileCards = profileSearched.map((profile, i) =>  { \n     \n      return (\n            <Row md={10} lg={10} className=\"searched-cards-container\">\n          <Card key={i} className=\"searched-cards\" style={{ width: \"12rem\" }}>\n            <Card.Img\n              variant=\"top\"\n              src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n            />\n            <Card.Body>\n              <Card.Title>{profile.profile_name}</Card.Title>\n              <Button\n                variant=\"primary\"\n                onClick={() => this.showProfilePageForSearchedUser(profile)}\n              >\n                Click to see {profile.profile_name}'s profile\n              </Button>\n            </Card.Body>\n          </Card>\n          </Row>\n      \n      )}\n    )\n    return (\n      <>\n        {this.state.loaded ? (\n          <ProfilePage\n            userProfile={this.state.clickedProfile}\n            handleItem={this.props.handleItem}\n            handleNavClassChange={this.props.handleNavClassChange}\n            chatShow={this.props.chatShow}\n            handleChatToggle={this.props.handleChatToggle}\n            userWhoBorrowed={profileSearched.profileName}\n            currentUserProfile={this.props.userProfile}\n          />\n        ) : (\n          <Container\n            sm={12}\n            md={12}\n            lg={12}\n            fluid={true}\n            className=\"grid-container\"\n          >\n            <Row>\n              <Col sm={12} md={12} lg={12}>\n                <Form inline className=\"search-bar-container\">\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Search for an item\"\n                    className=\"mr-sm-2\"\n                    ref={this.searchRef}\n                  />\n                  <Button variant=\"primary\" onClick={this.handleSearchQuery}>\n                    Search\n                  </Button>\n                </Form>\n                <Row className=\"show-grid\">{searchedProfileCards}</Row>\n              </Col>\n            </Row>\n          </Container>\n        )}\n      </>\n    );\n  }\n} \n\nexport default SearchPage;\n","import React from \"react\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"./Navbar\";\nimport Home from \"./Home\";\nimport Root from \"../../apis/root\";\nimport Map from \"./Map\";\nimport MyProfile from \"./MyProfile\";\nimport Axios from \"axios\";\nimport SearchPage from \"./MyCommunity\";\nimport ChatWidget from \"./ChatWidget\";\n\nclass App extends React.Component {\n  state = {\n    user: [],\n    userProfile: [],\n    items: [],\n    show: \"false\",\n    showProfile: false,\n    displayItemForm: false,\n    itemName: \"first name\",\n    itemPrice: \"price\",\n    allProfiles: [],\n    displayed_form: \"\",\n    loggedIn: window.localStorage[\"token\"] ? true : false,\n    username: \"\",\n    searchItem: null,\n    profileSearched: \"\",\n    navClass: \"nav navbar-light\",\n    loading: false,\n    chatShow: false\n  };\n\n  // Handlers\n  handleNavClassChange = () => {\n    this.setState({ navClass: \"nav navbar-dark\" });\n  };\n  handleAddItemName = event => {\n    let itemName = event.target.value;\n    this.setState({ itemName: itemName });\n  };\n  handleAddItemPrice = event => {\n    let itemPrice = event.target.value;\n    this.setState({ itemPrice: itemPrice });\n  };\n\n  handleItemFormSubmit = e => {\n    e.preventDefault();\n    Root.post(\"items/\", {\n      name_of_item: this.state.itemName.itemName,\n      price: this.state.itemPrice.itemPrice,\n      available: true\n    })\n      .then(res => {\n        this.setState({ displayItemForm: false });\n        console.log(\"Item added\");\n      })\n      .catch(err => {\n        alert(\"Error\", err);\n      });\n  };\n\n  handleAddItemToggle = event => {\n    event.preventDefault();\n    this.setState(prevState => !prevState);\n  };\n\n  handleProfileFormSubmit = values => {\n    let name = values.profile_name;\n    let email = values.email;\n    let address = values.address;\n\n    this.setState({ name, email, address });\n  };\n\n  handleShowProfile = () => {\n    this.setState({ showProfile: true });\n  };\n  handleClose = () => {\n    this.setState({ showProfile: true });\n  };\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n\n  getAllProfiles = () => {\n    Root.get(\"profiles/\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let profiles = res.data;\n        this.setState({ allProfiles: profiles });\n      })\n      .then(res => {\n        this.getProfileId();\n      });\n  };\n  getAllItems = () => {\n    return null;\n  };\n  getProfileId = () => {\n    let profiles = this.state.allProfiles;\n\n    this.setState({\n      userProfile: profiles.filter(profile => {\n        if (profile.user === Number(window.localStorage[\"id\"])) {\n          return profile;\n        }\n      })\n    });\n  };\n\n  handle_login = (e, data) => {\n    e.preventDefault();\n    Axios.post(\n      \"https://friendly-community.herokuapp.com/authenticate/\",\n      data\n    ).then(res => {\n      window.localStorage[\"token\"] = res.data.token;\n      window.localStorage[\"username\"] = data.username;\n      window.localStorage[\"id\"] = res.data.id;\n    });\n    this.getProfileId();\n  };\n\n  handle_signup = (e, data) => {\n    e.preventDefault();\n    Root.post(\"users/\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      window.localStorage[\"token\"] = res.data.token;\n      window.localStorage[\"username\"] = data.username;\n      window.localStorage[\"id\"] = res.data.id;\n      this.getProfileId();\n    });\n  };\n\n  handle_logout = e => {\n    e.preventDefault();\n    window.localStorage[\"token\"] = \"\";\n    window.localStorage[\"username\"] = \"\";\n    window.localStorage[\"id\"] = \"\";\n    this.setState({ loggedIn: false });\n  };\n\n  display_form = form => {\n    this.setState({\n      displayed_form: form\n    });\n  };\n\n  handleItem = (item, price) => {\n    let newItems = [];\n    newItems.push({ item, price });\n    this.setState(prevState => ({ items: newItems }));\n  };\n\n  handleChatToggle = () => this.setState({ chatShow: !this.state.chatShow });\n\n  componentDidMount() {\n    this.getAllProfiles();\n    this.getProfileId();\n  }\n\n  render() {\n    const { userProfile, chatShow } = this.state;\n    const chatWidget = (\n      <ChatWidget userProfile={userProfile} chatShow={chatShow} />\n    );\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n          <Switch>\n            <NavBar\n              loggedIn={this.state.loggedIn}\n              display_form={this.display_form}\n              handle_logout={this.handle_logout}\n              username={this.state.username}\n              displayed_form={this.state.displayed_form}\n              handle_login={this.handle_login}\n              handle_signup={this.handle_signup}\n              getItems={this.getSearchQuery}\n              getProfile={this.getSearchProfile}\n              userProfile={this.state.userProfile}\n              handleNavClassChange={this.handleNavClassChange}\n              navClass={this.state.navClass}\n            />\n          </Switch>\n\n          <Switch>\n            <Route\n              path=\"/profiles/search\"\n              render={props => (\n                <SearchPage\n                  loggedIn={this.state.loggedIn}\n                  handleNavClassChange={this.handleNavClassChange}\n                  handleItem={this.handleItem}\n                  chatWidget={chatWidget}\n                  handleChatToggle={this.handleChatToggle}\n                  chatShow={chatShow}\n                  userProfile={this.state.userProfile}\n                />\n              )}\n            />\n          </Switch>\n          <Switch>\n            <Route\n              path=\"/map\"\n              render={props => (\n                <Map\n                  allProfiles={this.state.allProfiles}\n                  handleNavClassChange={this.handleNavClassChange}\n                />\n              )}\n            />\n          </Switch>\n          <Switch>\n            <Route\n              exact\n              path=\"/profiles/myprofile\"\n              render={props => (\n                <MyProfile\n                  handleItem={this.handleItem}\n                  userProfile={this.state.userProfile}\n                  loggedIn={this.state.loggedIn}\n                  handleNavClassChange={this.handleNavClassChange}\n                  getProfileId={this.getProfileId}\n                  chatWidget={chatWidget}\n                  handleChatToggle={this.handleChatToggle}\n                  chatShow={chatShow}\n                  allProfiles={this.state.allProfiles}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.9bcb5913.png\";"],"sourceRoot":""}